{
  "permissions": {
    "allow": [
      "Bash(dotnet build BlockLife.sln)",
      "Bash(dotnet build:*)",
      "Bash(dotnet test:*)",
      "Bash(dotnet add package:*)",
      "Bash(dotnet run:*)",
      "Bash(csc:*)",
      "Bash(ErrorTest.exe)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(git add:*)",
      "Bash(dotnet add:*)",
      "Bash(mkdir:*)",
      "Bash(git checkout:*)",
      "WebFetch(domain:mikeschulze.github.io)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(powershell:*)",
      "Bash(python:*)",
      "Bash(gh pr merge:*)",
      "Bash(cp:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(\".claude/manage-agent-config.sh\" set on)",
      "Bash(\".claude/manage-agent-config.sh\" set off)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(head:*)",
      "Bash(done)",
      "Bash(git rebase:*)",
      "Bash(git merge:*)",
      "Bash(git rm:*)",
      "Bash(git push:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "mcp__context7__resolve-library-id",
      "Bash(git fetch:*)",
      "Bash(git pull:*)",
      "Bash(git commit:*)",
      "Bash(gh api:*)",
      "Bash(do sed -i 's|Docs/Workflow/Backlog.md|Docs/01-Active/Backlog.md|g' \"$file\")",
      "Bash(sed:*)",
      "Bash(touch:*)",
      "Bash(.scriptscorebuild.ps1 test)",
      "Bash(dotnet list package:*)",
      "Bash(mcp__context7__get-library-docs:*)",
      "Bash(env)",
      "WebFetch(domain:context7.com)",
      "Bash(gh pr view:*)",
      "Bash(chmod:*)",
      "Bash(dotnet husky:*)",
      "Bash(dotnet format style:*)",
      "Bash(dotnet format:*)",
      "Bash(gh repo view:*)",
      "Bash(git reset:*)",
      "Bash(git rev-parse:*)",
      "Bash(time:*)",
      "Bash(.husky/pre-commit test-misalign-msg.tmp)",
      "Bash(.husky/pre-commit test-main-msg.tmp)",
      "Bash(cat:*)",
      "Bash(sh:*)",
      "Bash(./scripts/core/build.ps1 test)",
      "Bash(./scripts/git/branch-status-check.ps1)",
      "Bash(tree:*)",
      "Bash(git mv:*)",
      "Bash(git stash:*)",
      "Bash(./scripts/persona/embody.ps1 test-specialist)",
      "Bash(./scripts/persona/embody.ps1 dev-engineer)",
      "mcp__context7__get-library-docs",
      "Bash(./scripts/persona/embody.ps1 tech-lead)",
      "Bash(./scripts/utils/rotate-memory-bank.ps1 -DryRun)",
      "Bash(./scripts/utils/fix-session-log-order.ps1 -ValidateOnly)",
      "Bash(./scripts/utils/fix-session-log-order.ps1 -DryRun)",
      "Bash(./scripts/utils/check-session-log-health.ps1)",
      "Bash(./scripts/utils/fix-session-log-order.ps1)",
      "Bash(git log:*)",
      "Bash(./scripts/persona/embody.ps1 debugger-expert)",
      "Bash(gh pr list:*)",
      "WebFetch(domain:languageext.readthedocs.io)",
      "WebSearch",
      "Read(/C:\\Users\\Coel\\Documents\\Godot\\blocklife/**)",
      "Read(/C:\\Users\\Coel\\Documents\\Godot\\blocklife\\src\\Features\\Block\\Placement/**)",
      "Read(/C:\\Users\\Coel\\Documents\\Godot\\blocklife\\godot_project\\features\\block\\placement/**)",
      "Read(/C:\\Users\\Coel\\Documents\\Godot\\blocklife\\godot_project\\features\\block\\placement/**)",
      "Read(/C:\\Users\\Coel\\Documents\\Godot\\blocklife\\src/**)",
      "Read(/C:\\Users\\Coel\\Documents\\Godot\\blocklife\\src\\Features\\Block\\Placement/**)",
      "Read(/C:\\Users\\Coel\\Documents\\Godot\\blocklife/**)",
      "Read(/C:\\Users\\Coel\\Documents\\Godot\\blocklife\\godot_project/**)",
      "Read(/C:\\Users\\Coel\\Documents\\Godot\\blocklife\\godot_project\\scenes/**)",
      "Bash(git branch:*)",
      "Bash(git cherry-pick:*)",
      "Bash(Remove-Item scripts/persona/embody-v3-backup.ps1 -Force)",
      "Bash(./scripts/test/test-embody.ps1)",
      "Bash(./scripts/persona/embody.ps1 product-owner)",
      "Bash(./scripts/core/build.ps1 build)",
      "Bash(./scripts/test/quick.ps1)",
      "Read(/C:\\C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Features\\Block/**)",
      "Read(/C:\\C:\\Users\\Coel\\Documents\\Godot\\BlockLife/**)",
      "Read(/C:\\C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\godot_project/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\blocklife\\.github/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\.github/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\scripts\\core/**)",
      "Bash(dir:*)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\Docs\\03-Reference/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\Docs\\03-Reference/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\Docs\\03-Reference/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Features\\Block\\Placement/**)",
      "Bash(git remote add:*)",
      "Bash(gh workflow list:*)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core\\Infrastructure\\Logging/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\tests/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\Docs\\03-Reference/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\Docs\\03-Reference/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\Docs\\03-Reference/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\.husky/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\.husky/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\.husky/**)",
      "Bash(dotnet tool restore:*)",
      "Read(C:\\Users\\Coel\\.claude/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core\\Infrastructure\\Extensions/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\tests/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\tests/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\tests\\Architecture/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\tests\\BlockLife.Core.Tests\\Infrastructure\\DependencyInjection/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\tests\\BlockLife.Core.Tests\\Infrastructure\\DependencyInjection/**)",
      "Bash(./scripts/persona/embody.ps1 devops-engineer)",
      "Bash(gh run view:*)",
      "Bash(gh run list:*)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core\\Domain\\Common/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core\\Domain\\Common/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core\\Infrastructure\\Services/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core\\Application\\Commands/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Features\\Block\\Move/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Features\\Block\\Move/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Features\\Block\\Commands/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Features\\Player\\Queries/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Features\\Block\\Commands/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Features\\Player\\Queries/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core\\Infrastructure/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core\\Infrastructure\\Services/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core\\Infrastructure\\Services/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core\\Infrastructure\\Services/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\actors/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\mechanics/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\actors/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\actors/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\actors/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\actors\\mobs/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\actors\\mobs/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\actors\\hero/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\assets\\sprites/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\BlockLife\\src\\Core\\Infrastructure\\Services/**)",
      "Bash(./scripts/utils/fix-project-identity.ps1 -DryRun -Verbose)",
      "Bash(./scripts/utils/fix-project-identity.ps1 -DryRun)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\levels/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\levels/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\levels\\builders/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\levels\\builders/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\levels\\painters/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\levels/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\levels/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\levels\\rooms/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\tiles/**)",
      "Read(C:\\Users\\Coel\\Documents\\Godot\\shattered-pixel-dungeon\\core\\src\\main\\java\\com\\shatteredpixel\\shatteredpixeldungeon\\tiles/**)",
      "WebFetch(domain:docs.godotengine.org)",
      "WebFetch(domain:louthy.github.io)",
      "Bash(gh pr:*)",
      "Bash(ls:*)",
      "Bash(Remove-Item \"tests\\Application\\Actor\\Services\\ActorStateServiceIntegrationTests.cs\" -Force)",
      "Bash(./scripts/core/build.ps1 test --filter \"Category=Application&ExecuteAttack\")",
      "Bash(dotnet list:*)",
      "Bash(dotnet tool list:*)",
      "Bash(Remove-Item \"C:\\Users\\Coel\\Documents\\Godot\\darklands\\Views\\AttackView.cs\" -Force)",
      "Bash(git remote:*)",
      "Bash(./scripts/core/build.ps1 test --filter \"*ExecuteAttackCommandHandler*\")",
      "Bash(./scripts/core/build.ps1 test --filter \"*ExecuteAttackCommandHandlerIntegrationTests*Handle_MultipleSequentialAttacks*\")",
      "Bash(dotnet remove:*)",
      "Read(//c/**)",
      "Bash(dotnet restore:*)",
      "Bash(./scripts/core/build.ps1 test --filter \"Category=Architecture\")",
      "Bash(identify:*)",
      "Bash(timeout:*)",
      "Bash(test:*)",
      "Bash(curl -s \"https://docs.godotengine.org/en/stable/tutorials/2d/using_tilesets.html\")",
      "Bash(do)",
      "Bash(./scripts/git/pr.ps1 ready)",
      "Bash(./scripts/core/build.ps1 test --filter \"*SwapItemsCommand*\")",
      "Bash(gh issue view:*)",
      "Bash(godot:*)",
      "Bash(pwsh ./scripts/validate-templates.ps1)",
      "Bash(./scripts/core/build.ps1 test --filter \"Category=Combat\")",
      "Bash(cmake:*)",
      "Bash(./scripts/core/build.ps1 test --filter \"Category=WorldGen\")",
      "Bash(./scripts/core/build.ps1 test-only --filter \"Category=WorldGen\")",
      "Bash(./scripts/core/build.ps1 test --filter \"NativePlateSimulatorIntegrationTests\")",
      "Bash(./scripts/core/build.ps1 test --filter \"Category=WorldGen&Category=Integration\")",
      "Bash(findstr:*)",
      "Bash(convert:*)",
      "Bash(objdump:*)",
      "Bash(./scripts/core/build.ps1 test --filter \"PrecipitationCalculator\")",
      "Bash(./scripts/core/build.ps1 test-only)",
      "Bash(./scripts/core/build.ps1 test --filter \"PrevailingWinds\")",
      "Bash(./scripts/core/build.ps1 test-only --filter \"PrevailingWinds\")",
      "Bash(./scripts/core/build.ps1 test --filter \"RainShadow\")",
      "Bash(./scripts/core/build.ps1 test-only:*)",
      "Bash(pwsh:*)",
      "Bash(awk:*)",
      "Bash(./scripts/core/build.ps1 test --filter \"FlowDirectionCalculator\")",
      "Bash(./scripts/core/build.ps1 test --filter \"Category=Equipment\")",
      "Bash(./scripts/core/build.ps1 test --filter \"Category=Domain\")",
      "Bash(Select-String -Pattern \"Passed!|Failed!|Test Run|Total tests\" -Context 0,2)",
      "Bash(\"src/Darklands.Core/Features/Inventory/Application/Queries/GetOccupiedCellsQueryHandler.cs\" )",
      "Bash(\"src/Darklands.Core/Features/Inventory/Application/Queries/CalculateHighlightCellsQueryHandler.cs\" )",
      "Bash(\"src/Darklands.Core/Features/Inventory/Application/Queries/GetItemRenderPositionQueryHandler.cs\" )",
      "Bash(\"src/Darklands.Core/Features/Inventory/Application/Commands/SwapItemsCommandHandler.cs\" )",
      "Bash(\"src/Darklands.Core/Features/Equipment/Application/Commands/SwapEquipmentCommandHandler.cs\")",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then)",
      "Bash(echo:*)",
      "Bash(fi)",
      "Bash(\"src/Darklands.Core/Features/Inventory/Application/Commands/SwapItemsCommandHandler.cs\")",
      "Bash(\"src/Darklands.Core/Features/Inventory/Application/Queries/GetItemRenderPositionQueryHandler.cs\")",
      "Bash(\"src/Darklands.Core/Features/Inventory/Application/Commands/PlaceItemAtPositionCommandHandler.cs\")",
      "Bash(\"src/Darklands.Core/Features/Inventory/Application/Queries/GetItemRenderPositionQuery.cs\" )",
      "Bash(\"src/Darklands.Core/Features/Inventory/Application/Queries/CalculateHighlightCellsQuery.cs\")",
      "Bash(\"src/Darklands.Core/Features/Inventory/Application/Queries/CalculateHighlightCellsQueryHandler.cs\")",
      "Bash(./scripts/core/build.ps1 test \"Category=Inventory\")",
      "Bash(./scripts/core/build.ps1 test --filter \"Category!=WorldGen&Category!=Integration\")",
      "Bash(Select-String -Pattern \"Warning\\(s\\)|Error\\(s\\)|Build succeeded|Build FAILED\")",
      "Bash(Select-String -Pattern \"error|warning|succeeded\" -Context 1)",
      "Bash(depths: 50-250m)",
      "Bash(sizes: 100-800 cells\"\n\n**Validation Examples**:\n✅ Basin boundaries follow terrain depressions\n✅ Pour points located on basin rims (not centers)\n✅ Center points are local minima (lowest in basin)\n✅ Multiple basins don''''t overlap\n✅ Basin cell count = area metadata\n\nThis prevents VS_030 from building on faulty metadata!\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\Users\\Coel\\Documents\\Godot\\blocklife\\Docs",
      "C:\\Users\\Coel\\Documents\\Godot\\blocklife\\.claude",
      "C:\\Users\\Coel\\Documents\\Godot\\blocklife"
    ]
  },
  "outputStyle": "Explanatory"
}
